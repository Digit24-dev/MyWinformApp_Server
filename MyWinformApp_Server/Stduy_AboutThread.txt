
Critical Section [임계영역]

임계영역 응용

	- lock 키워드 사용

	 매개변수로 사용하는 객체는 참조형이면 어느 것이든 쓸 수 있으나, Public 키워드 등을 통해 외부 코드에서도 접근할 수 있는 세가지는 사용하지 말것.

	 1. this		: 클래스의 인스턴스는 내부뿐 아니라 외부에서도 자주 사용된다.(?)
	 2. Type형식	: typeof연산자나 object 클래스로부터 물려받은 GetType() 메소드는 type형식의 인스턴스를 반환한다. 즉, 코드의 어느 곳에서나 특정 형식에 대한 Type 객체를 얻을 수 있다.
	 3. String 형식	: 절대로 string 객체로 lock 하지 말것. "abc"는 어떤 코드에서든 얻어낼 수 있는 string 객체이다.

	 lock(object) // -> 여기에 참조로 사용될 객체를 자주 쓰이는 객체로 사용하지 말라는 뜻.
	 {
		
	 }

	 - Monitor 클래스







	 [ 비동기 코드 방식 ]

  - async 한정자
  
   메소드, 이벤트 처리기, 태스크, 람다식 등을 수식함으로써 C# 컴파일러가 이들을 호출하는 코드를 만날 때 호출 결과를 기다리지 않고 다음 코드로 이동하도록 실행 코드를 생성.
   메소드/이벤트 처리기를 선언할 때 한정자들과 함께 사용.

   public static async Task MyMethodAsync()
   {
   
   }
  
  async 한정자로 된 메소드는 반환형식이 Task 혹은 Task<TResult> 또는 void 이어야 한다.

  1. async로 한정한 void 형식 메소드는 await 연산자가 없어도 비동기로 실행된다.
  2. async로 한정한 Task 또는 Task<TResult>를 반환하는 메소드/태스크/람다식은 await 연산자를 만나는 곳에서 호출자에게 제어를 돌려주며, await 연산자가 없는 경우 동기로 실행된다.



  - await 연산자

