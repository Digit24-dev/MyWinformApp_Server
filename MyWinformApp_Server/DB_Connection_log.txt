1. MariaDB를 연결하기 위하여 HeidiSQL를 사용하여 연결 시도. 마리아 DB를 깔았으니 DBMS가 필요
2. SQL Server configuration 2019 설치
3. 서버에 연결했지만 로그인하는 동안 오류가 발생했습니다. (provider: Shared Memory Provider, error: 0 - 파이프의 다른 끝에 프로세스가 없습니다.) / SQL Server Exception 오류가 계속 발생 중.

22.10.13

- 사용자 'root'이(가) 로그인하지 못했습니다.'


22. 10. 16

 1. 데이터 베이스에 저장하는 방식 연구.
   1.1 저장 방식
	1.1.1 채팅이 들어올 때마다 저장
	 장점
	  - 채팅이 들어올 때마다 저장하면 이미 분리된 데이터를 저장하면 되기 때문에 관리하기 편해진다.
	 단점
	  - 데이터 베이스 입출력이 너무 많아 진다.
	 
	1.1.2 서버가 종료될 시에 저장
	 장점
	  - 데이터 베이스에 입출력이 단순화 된다.

	 단점
	  - 데이터를 분리하여 저장해야 한다.
	  - 시간 / 데이터 개수 등을 고려하여 DB에 저장하는 타이밍을 고려하여야 한다.


22. 10. 17

 데이터 베이스에 효율적인 저장을 위해서는 ~ 일정 시간, 일정 대화 수(메모리)에 따라 데이터 베이스를 갱신하여 저장하는 것이 좋을 듯 하다.

 [기준]
  - 일정 시간 : 5분 마다
  - 일정 대화 수 : 버퍼 5MB 마다

 기준을 정했으니, 목표를 설정하고 해당 기준에 따라 데이터 베이스에 데이터를 삽입하자.


 22. 10. 19

  DB에 저장 하기 위한 기준 중 일정시간 마다 저장하기 위해서는 카운터/타이머 가 필요하다.
  WinForm에는 3가지의 타이머가 존재하며 사용되는 방식이 다르다.

  - System.Windows.Forms.Timer
  - System.Threading.Timer
  - System.Timers.Timer

  세 가지 모두 타이머의 기능을 수행하기는 하나, 실행되는 스레드의 위치가 다르므로 사용환경에 맞게 설계하여 사용하여야 한다.

  - Windows.Forms.Timer는 UI의 동작, 컨트롤을 담당하는 Thread환경에서 실행된다.
  https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=zic6188610&logNo=221029988476
  참조
